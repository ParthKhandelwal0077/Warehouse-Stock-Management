# Generated by Django 4.2.7 on 2025-07-27 13:23

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(help_text='Unique product code', max_length=20, unique=True)),
                ('product_name', models.CharField(help_text='Product name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Product description', null=True)),
                ('category', models.CharField(choices=[('RAW', 'Raw Material'), ('WIP', 'Work in Progress'), ('FIN', 'Finished Goods'), ('CON', 'Consumables')], default='FIN', help_text='Product category', max_length=3)),
                ('unit_of_measure', models.CharField(choices=[('PCS', 'Pieces'), ('KG', 'Kilograms'), ('LTR', 'Liters'), ('MTR', 'Meters'), ('BOX', 'Boxes'), ('SET', 'Sets')], default='PCS', help_text='Unit of measurement', max_length=3)),
                ('minimum_stock_level', models.DecimalField(decimal_places=2, default=0, help_text='Minimum stock level for alerts', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('maximum_stock_level', models.DecimalField(decimal_places=2, default=0, help_text='Maximum stock level', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('standard_cost', models.DecimalField(decimal_places=2, default=0, help_text='Standard cost per unit', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_active', models.BooleanField(default=True, help_text='Whether product is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product Master',
                'verbose_name_plural': 'Product Masters',
                'db_table': 'prodmast',
                'ordering': ['product_code'],
            },
        ),
        migrations.CreateModel(
            name='StockMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(help_text='Unique transaction ID', max_length=20, unique=True)),
                ('transaction_date', models.DateTimeField(help_text='Transaction date and time')),
                ('transaction_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('ADJ', 'Adjustment'), ('TRF', 'Transfer')], help_text='Type of transaction', max_length=3)),
                ('reference_number', models.CharField(blank=True, help_text='External reference number (PO, Invoice, etc.)', max_length=50, null=True)),
                ('vendor_customer', models.CharField(blank=True, help_text='Vendor or customer name', max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, help_text='Transaction remarks', null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='DRAFT', help_text='Transaction status', max_length=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, help_text='Total transaction amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('created_by', models.CharField(default='system', help_text='User who created the transaction', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Stock Transaction',
                'verbose_name_plural': 'Stock Transactions',
                'db_table': 'stckmain',
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Transaction quantity', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, help_text='Cost per unit', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, help_text='Total cost (quantity * unit_cost)', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('lot_batch_number', models.CharField(blank=True, help_text='Lot or batch number', max_length=50, null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='Product expiry date', null=True)),
                ('location', models.CharField(blank=True, help_text='Storage location', max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, help_text='Line item remarks', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(help_text='Product reference', on_delete=django.db.models.deletion.CASCADE, related_name='stock_details', to='inventory.productmaster')),
                ('stock_main', models.ForeignKey(help_text='Reference to stock main transaction', on_delete=django.db.models.deletion.CASCADE, related_name='stock_details', to='inventory.stockmain')),
            ],
            options={
                'verbose_name': 'Stock Detail',
                'verbose_name_plural': 'Stock Details',
                'db_table': 'stckdetail',
                'ordering': ['stock_main', 'product'],
                'unique_together': {('stock_main', 'product', 'lot_batch_number')},
            },
        ),
    ]
